import "platform:/resource/MNetwork/model/mNetwork.ecore"
import "http://www.eclipse.org/emf/2002/Ecore"

pattern container {
	memik: MEMIK
}

pattern serverInEU {
	server: Server
	# server.tag == enum::EU
} 
 
pattern serverInNonEU {
	server: Server
	# server.tag == enum::NonEU
}

pattern serverHasEUEntity {
	entityInEntry: Entity
	# entityInEntry.tag == enum::EU
	
	entryInDatabase: Entry {
		-entity -> entityInEntry	
	}
	databaseInVserver: Database {
		-entry -> entryInDatabase
	}
	vServerInServer: VServer {
		-database -> databaseInVserver
	}
	server: Server {
		-vserver -> vServerInServer
	}
}

pattern serverInEUHasEUEntity {
	entityInEntry: Entity
	# entityInEntry.tag == enum::EU
	
	entryInDatabase: Entry {
		-entity -> entityInEntry	
	}
	databaseInVserver: Database {
		-entry -> entryInDatabase
	}
	vServerInServer: VServer {
		-database -> databaseInVserver
	}
	server: Server {	
		-vserver -> vServerInServer
	}
	
	# server.tag == enum::EU
}

pattern serverInEUHasEUEntity2 refines serverHasEUEntity {
	server: Server
	# server.tag == enum::EU
}

event serverMigrationWarning {
	Server server;
}

event_pattern isEUServerWithEUEntitiesMigratingToNonEU spawns serverMigrationWarning {
	euServerWithEUEntities: serverInEUHasEUEntity
	nonEUServer: serverInNonEU
	
	euServerWithEUEntities.server == nonEUServer.server
	
	# all(euServerWithEUEntities -> all(nonEUServer)) {
		!vanished(euServerWithEUEntities)
	}
	
	spawn serverMigrationWarning(euServerWithEUEntities.server)
}

rule reseatNonEUServerToEU() {
	server: Server {
		.tag := enum::EU
	}
	# server.tag == enum::NonEU
}

event_pattern applyOnServerMigrationWarning applies reseatNonEUServerToEU {
	migrationWarning: serverMigrationWarning
	ruleToEU: reseatNonEUServerToEU
	
	migrationWarning.server == ruleToEU.server
	
	# all(ruleToEU) && all(migrationWarning)
	
	apply reseatNonEUServerToEU() to ruleToEU
}